// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

enum IntentStatus {
  ACTIVE
  PAUSED
  COMPLETED
  DELETED
}

model Intent {
  id         String       @id @default(cuid())
  startDate  DateTime
  endDate    DateTime
  status     IntentStatus @default(ACTIVE)
  successYes Int          @default(0)
  successNo  Int          @default(0)
  reminders  String // Or JSON?
  createdOn  DateTime     @default(now())
  notes      String       @default("")

  // Relationships
  user User  @relation("UserIntents", fields: [creatorId], references: [id])
  aim  Aim   @relation("AimIntents", fields: [aimId], references: [id])
  tags Tag[] @relation("IntentTags")

  // Fields that represent foreign keys to improve query performance
  // Added @map directive to improve database integrity
  creatorId String @map("user_id")
  aimId     String @map("aim_id")

  // Indexes
  @@index([creatorId])
  @@index([aimId])
}

enum UserRole {
  USER
  GROUP_MANAGER
  ADMIN
}

model User {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  role      UserRole
  timezone  String
  createdOn DateTime @default(now())

  // Relationships
  intents Intent[] @relation("UserIntents")
  groups  Group[]  @relation("GroupMembers")
  aims    Aim[]    @relation("AimParticipants")
  tags    Tag[]    @relation("UserTags")
}

model Group {
  id        String   @id @default(cuid())
  title     String
  createdOn DateTime @default(now())
  creatorId String

  // Relationships
  members User[] @relation("GroupMembers")
  aims    Aim[]  @relation("GroupAims")
  tags    Tag[]  @relation("GroupTags")
}

model Aim {
  id              String   @id @default(cuid())
  title           String
  isPublic        Boolean  @default(true)
  helpfulnessLow  Int
  helpfulnessMid  Int
  helpfulnessHigh Int
  createdOn       DateTime @default(now())
  creatorId       String
  notes           String   @default("")

  // Relationships
  groups  Group[]  @relation("GroupAims")
  intents Intent[] @relation("AimIntents")
  tags    Tag[]    @relation("AimTags")
  users   User[]   @relation("AimParticipants")

  // Indexes
  @@index([helpfulnessLow])
  @@index([helpfulnessMid])
  @@index([helpfulnessHigh])
  @@index([title])
}

model Tag {
  id        String   @id @default(cuid())
  title     String
  createdOn DateTime @default(now())
  creatorId String

  // Relationships
  aims    Aim[]    @relation("AimTags")
  groups  Group[]  @relation("GroupTags")
  users   User[]   @relation("UserTags")
  intents Intent[] @relation("IntentTags")

  // Indexes
  @@index([title])
}
